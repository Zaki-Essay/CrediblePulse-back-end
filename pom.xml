<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.1.5</version>
    <relativePath />
    <!-- lookup parent from repository -->
  </parent>
  <groupId>xyz.crediblePulse</groupId>
  <artifactId>CrediblePulse-back-end</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>CrediblePulse-back-end</name>
  <description>CrediblePulse-back-end</description>
  <properties>
    <java.version>17</java.version>
    <archunit-junit5-api.version>1.0.1</archunit-junit5-api.version>
    <h2.version>2.2.220</h2.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <keycloak-admin-client.version>22.0.1</keycloak-admin-client.version>
    <springdoc-openapi-starter-webmvc-ui.version>2.2.0</springdoc-openapi-starter-webmvc-ui.version>
    <spotless.version>2.38.0</spotless.version>
    <org.jacoco.agent.version>0.8.10</org.jacoco.agent.version>
    <maven.jib.version>3.3.2</maven.jib.version>
    <jib-maven-plugin.image>registry.access.redhat.com/ubi8/openjdk-17:1.16-2</jib-maven-plugin.image>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-docker-compose</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5-api</artifactId>
      <version>${archunit-junit5-api.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-admin-client</artifactId>
      <version>${keycloak-admin-client.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <java>
            <palantirJavaFormat />
            <importOrder />
            <removeUnusedImports />
            <formatAnnotations />
          </java>
          <pom>
            <includes>
              <include>pom.xml</include>
            </includes>
            <sortPom>
              <expandEmptyElements>false</expandEmptyElements>
              <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
            </sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${org.jacoco.agent.version}</version>
        <configuration>
          <append>true</append>
          <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
          <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
          <excludes>
            <exclude>*MethodAccess</exclude>
          </excludes>
          <output>file</output>
          <skip>${maven.test.skip}</skip>
        </configuration>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <phase>test-compile</phase>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>${maven.jib.version}</version>
        <configuration>
          <allowInsecureRegistries>true</allowInsecureRegistries>
          <container>
            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
            <volumes>
              <volume>/config</volume>
            </volumes>
          </container>
          <from>
            <image>${jib-maven-plugin.image}</image>
          </from>
          <to>
            <image>${env.REGISTRY_URI}/${project.artifactId}:${env.IMAGE_TAG}</image>
          </to>
        </configuration>
      </plugin>
    </plugins>

  </build>

</project>
